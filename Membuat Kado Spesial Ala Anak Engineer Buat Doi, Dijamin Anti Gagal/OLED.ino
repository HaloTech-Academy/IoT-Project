/*********
  Rui Santos
  Complete project details at https://randomnerdtutorials.com  
*********/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

static const uint8_t image_data_test[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x00, 0x2b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xb0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0x71, 0xf0, 0x7e, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfe, 0xe7, 0x41, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xfd, 0xc0, 0x00, 0xc0, 0x01, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xf9, 0x80, 0x01, 0x80, 0x1f, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xf3, 0x00, 0x02, 0x00, 0x7f, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x06, 0x01, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x04, 0x03, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x08, 0x00, 0x01, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0x87, 0xff, 0x02, 0x80, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0xe8, 0x01, 0xfe, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x07, 0xfe, 0x07, 0xff, 0x0a, 0xfe, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x8f, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xe7, 0xff, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xe1, 0xff, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xfd, 0xfb, 0x81, 0xfc, 0x3f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0xff, 0xdd, 0x00, 0x78, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0xc0, 0x78, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xfe, 0xa0, 0x00, 0x61, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xc1, 0x5f, 0x40, 0x20, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xe8, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xfa, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xdf, 0xc0, 0x00, 0x00, 0xbf, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xc3, 0xc0, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfb, 0xff, 0x91, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfd, 0xff, 0x9b, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0xff, 0xaf, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x7f, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x3f, 0xa7, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x2d, 0xbf, 0x7f, 
    0xff, 0xff, 0xff, 0x3f, 0xef, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0xfe, 0xfe, 0xff, 
    0xff, 0xff, 0xff, 0x8f, 0xff, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0f, 0xfb, 0xff, 0xfd, 
    0xff, 0xff, 0xff, 0x8e, 0xff, 0xc7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0c, 0xfb, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x8d, 0xff, 0xef, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xb3, 0xff, 0xfd, 0xf1, 0x52, 
    0xff, 0xff, 0xff, 0xcb, 0xff, 0xef, 0xf9, 0x40, 0x00, 0x01, 0x7f, 0xef, 0xf7, 0xff, 0x5f, 0xfd, 
    0xff, 0xff, 0xff, 0xb7, 0xff, 0xff, 0xfd, 0xef, 0x9f, 0xbf, 0xff, 0xff, 0xff, 0xf1, 0x7f, 0xff, 
    0xff, 0xff, 0xfe, 0xef, 0xff, 0xff, 0xfc, 0xe3, 0xff, 0xf9, 0xff, 0xff, 0xef, 0x87, 0xff, 0xff, 
    0xff, 0xfe, 0x64, 0xdf, 0xff, 0xff, 0xff, 0x38, 0xbf, 0xe7, 0xff, 0xff, 0xee, 0x1f, 0xff, 0xff, 
    0xff, 0xff, 0x34, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xcf, 0xff, 0xff, 0xee, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
    0xf7, 0xfc, 0xd3, 0xff, 0xff, 0xfd, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xff, 0xff, 0xff, 
    0xf7, 0xfe, 0x33, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9c, 0x7f, 0xff, 0xff, 
    0xf7, 0xfe, 0x27, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3c, 0x7f, 0xff, 0xff, 
    0xf7, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x78, 0xff, 0xff, 0xff, 
    0xef, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf9, 0xff, 0xff, 0xff, 
    0xf7, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf0, 0xff, 0xff, 0xff, 
    0xe7, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf1, 0xff, 0xff, 0xff, 
    0xcf, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xe3, 0xff, 0xff, 0xff, 
    0xc7, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xe7, 0xff, 0xff, 0xff, 
    0xe7, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xcf, 0xff, 0xff, 0xff, 
    0xc7, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xc7, 0xff, 0xff, 0xff, 
    0xe7, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xc7, 0xff, 0xff, 0xff, 
    0xe7, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xed, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x83, 0xff, 0xff, 0xff, 
    0xe7, 0xf3, 0xff, 0xff, 0xff, 0xfe, 0xbf, 0xdf, 0xff, 0xff, 0xfe, 0x3f, 0xc7, 0xff, 0xff, 0xff, 
    0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xf8, 0xff, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0x7b, 0xff, 0xff, 0xff, 0xe1, 0xff, 0x0f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xfe, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0x87, 0xfc, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x9f, 0xff, 0xff, 0xff
};
 
void setup() {
  Serial.begin(115200);
 
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000); // Pause for 2 seconds
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_test, 128, 64, 1);
  display.display();
}
 
void loop() {
  
}
